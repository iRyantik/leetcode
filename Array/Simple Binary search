//Leetcode704
//左闭右闭
//[Left,Right]
class Solution {
public:
    int search(vector<int>& nums, int target) {
        int L=0;
        int R=nums.size()-1;
        while(L<=R){
            int middle=L+(R-L)/2;
            if(target<nums[middle]){
                R=middle-1;
            }
            else if(target>nums[middle]){
                L=middle+1;
            }
            else{return middle;}
        }
        return -1;
    }
};

//左闭右开
//[Left,Right)
class Solution {
public:
    int search(vector<int>& nums, int target) {
        int L=0;
        int R=nums.size()-1;
        while(L<=R){
            int middle=L+(R-L)/2;
            if(target<nums[middle]){
                R=middle-1;
            }
            else if(target>nums[middle]){
                L=middle+1;
            }
            else{return middle;}
        }
        return -1;
    }
};
